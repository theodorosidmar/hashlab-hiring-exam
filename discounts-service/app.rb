# Load all files generated by the protocol buffer compiler
this_dir = File.expand_path(File.dirname(__FILE__))
lib_dir = File.join(this_dir, 'app', 'lib')
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'dotenv'
require 'grpc'
require_relative 'app/server'

def main
  begin
    Dotenv.load
    server = GRPC::RpcServer.new
    server.add_http2_port("#{ENV['HOST']}:#{ENV['PORT']}", :this_port_is_insecure)
    puts "Server running insecurely on #{ENV['HOST']}:#{ENV['PORT']}"
    server.handle(DiscountServer)
    server.run_till_terminated
  rescue SystemExit, Interrupt
    puts "Server interrupted"
    server.stop
  rescue Exception => error
    puts "Stopping server. Unknown exception: #{error.inspect}"
    server.stop
  end
end

main()
